name: Java CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'liberica'
          cache: 'maven'

      - name: Build & Run Tests
        run: ./mvnw test

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: target/

  analyze:
      name: SonarQube Code Analysis
      runs-on: ubuntu-latest
      needs: test
      if: github.event_name == 'pull_request'
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
          with:
            fetch-depth: 0

        - name: Set up JDK 21
          uses: actions/setup-java@v4
          with:
            java-version: '21'
            distribution: 'liberica'
            cache: 'maven'

        - name: Download build artifact
          uses: actions/download-artifact@v4
          with:
            name: build-artifacts
            path: target/

        - name: Run SonarQube Analysis
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          run: >
            ./mvnw verify sonar:sonar
            -Dsonar.projectKey=inno-internship_user-service
            -Dsonar.organization=inno-internship
            

  publish:
    name: Publish Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/user-service:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/user-service:${{ github.sha }}